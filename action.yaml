name: Golang build

inputs:
  APP_NAME:
    description: "Name of the app"
    required: false
    default: "${{ github.event.repository.name }}"
  OS:
    description: "OS to build for (linux, windows, darwin)"
    required: true
  ARCH:
    description: "Architecture to build for (amd64,...)"
    required: true
    default: "${{ github.event.repository.name }}"
  BUILDARGS:
    description: "Additional args to add to the build command (for example `-ldflags='-X github.com/<owner>/<repo>/cmd.version=v1.0.0'`)"
    required: false
    default: ""

permissions:
  contents: write

runs:
  using: "composite"
  steps:
    - name: Set environment variables
      shell: bash
      run: |
        if [[ ${{ inputs.OS }} == "windows" ]]; then
          echo "FILE_EXTENSION=.exe" >> $GITHUB_ENV
        else
          echo "FILE_EXTENSION=" >> $GITHUB_ENV
        fi

    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: "${{ github.ref_name }}"

    - name: Set golang version
      uses: actions/setup-go@v3
      with:
        go-version-file: 'go.mod'

    - name: Compile binary by defined matrix
      shell: bash
      run: |
        echo "os: ${{ inputs.OS }}"
        echo "architecture: ${{ inputs.ARCH }}"
        go version

        env GOOS=${{ inputs.OS }} GOARCH=${{ inputs.ARCH }} go build ${{ inputs.BUILDARGS }} -o ./${{ inputs.APP_NAME }}_${{ inputs.OS }}_${{ inputs.ARCH }}${{ env.FILE_EXTENSION }}

        # If FILE_EXTENSION is empty, there is no need to make the binary executable, because it is for windows.
        if test -z "${{ env.FILE_EXTENSION }}"; then chmod +x ./${{ inputs.APP_NAME }}_${{ inputs.OS }}_${{ inputs.ARCH }}${{ env.FILE_EXTENSION }}; fi

    - name: Upload artifact
      uses: 'actions/upload-artifact@v3'
      with:
          name: artifact_${{ inputs.APP_NAME }}_${{ inputs.OS }}_${{ inputs.ARCH }}
          path: ./${{ inputs.APP_NAME }}_${{ inputs.OS }}_${{ inputs.ARCH }}${{ env.FILE_EXTENSION }}

    - name: Generate checksum
      shell: bash
      run: |
        sha256sum ./${{ inputs.APP_NAME }}_${{ inputs.OS }}_${{ inputs.ARCH }}${FILE_EXTENSION} | cut -d " " -f 1 > ./${{ inputs.APP_NAME }}_${{ inputs.OS }}_${{ inputs.ARCH }}${{ env.FILE_EXTENSION }}.sha256

    - name: Upload checksum artifact
      uses: 'actions/upload-artifact@v3'
      with:
          name: artifact_${{ inputs.APP_NAME }}_${{ inputs.OS }}_${{ inputs.ARCH }}${{ env.FILE_EXTENSION }}.sha256
          path: ./${{ inputs.APP_NAME }}_${{ inputs.OS }}_${{ inputs.ARCH }}${{ env.FILE_EXTENSION }}.sha256

    - name: Delete version-tag when build fails
      if: failure()
      shell: bash
      run: |
        git config --global user.name 'GithubActions'
        git config --global user.email 'githubactions@users.noreply.github.com'
        git push --delete origin ${{ github.ref_name }}
